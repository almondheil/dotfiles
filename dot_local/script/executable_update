#!/bin/sh

# Check we are not running as root
if [ "$EUID" -eq 0 ]; then
	echo "Error: This script shouldn't be run as root!"
	echo "It will elevate permissions when needed."
	exit 1
fi

echo "Updating all packages..."

# Check for -y or --yes parameter
PACMAN_YES=""
DEFAULT_YES=""
case $1 in
	-y)
		PACMAN_YES=" --noconfirm"
		DEFAULT_YES=" -y"
		;;
	--yes)
		PACMAN_YES=" --noconfirm"
		DEFAULT_YES=" -y"
		;;
esac

# AUR managers and pacman as a fallback
if command -v paru > /dev/null; then
	echo -e "\nUpdating system packages and AUR"
  (set -x; paru -Syu${PACMAN_YES})
elif command -v yay > /dev/null; then
	echo -e "\nUpdating system packages and AUR"
  (set -x; yay -Syu${PACMAN_YES})
elif command -v pacman > /dev/null; then
	echo -e "\nUpdating system packages"
  (set -x; pacman -Syu${PACMAN_YES})
fi

# apt
if command -v apt-get > /dev/null; then
	echo -e "\nUpdating system packages"
  (set -x; sudo apt-get update${DEFAULT_YES})
  (set -x; sudo apt-get upgrade${DEFAULT_YES})
fi

# dnf
if command -v dnf > /dev/null; then
	echo -e "\nUpgrading system packages"
  (set -x; sudo dnf update${DEFAULT_YES})
fi

# flatpak
if command -v flatpak > /dev/null; then
	echo -e "\nUpdating Flatpak packages..."
  (set -x; flatpak update${DEFAULT_YES})
fi

# on fedora, use the needs-restarting util to check if a reboot is needed
if command -v needs-restarting >/dev/null && ! needs-restarting -r >/dev/null; then
	echo -e "\nSystem should be rebooted! (needs-restarting -r)"
fi

# on debians, check the presence of /var/run/reboot-required to check if a reboot is needed
if [ -f /var/run/reboot-required ]; then
	echo "System should be rebooted! (/var/run/reboot-required)"
fi
