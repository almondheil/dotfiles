#-------------------------------------------------------------------------------
# all my favorite aliases
#-------------------------------------------------------------------------------

# ls
alias ls="ls --color=auto"
alias la="ls -a"           # All files
alias ll="ls -lh"          # Long listing
alias lr="ls -lhr"         # Reverse alphabetical
alias lt="ls -lht"         # Most recent first

# just shortenings and renamings
alias cm="chezmoi"
alias note="gonote"
alias pwf="realpath"
alias t="todo.sh"
alias trash-ls="trash-list"

# slightly safer rm, prompt for recursive or >3 files
alias rm="rm -I"

# move, but don't move into a directory
# I chose `yes n | mv -i` rather than `mv --no-clobber`, because this one prints something to tell the user it failed
alias mvd="yes n | mv -i --no-target-directory"

# rsync with the options I use a lot: recursive, verbose, human-readable, and with progress percentage
alias prsync="rsync -rvh --info=progress2"

# switch two files with each other
alias swap='mv --exchange'

#-------------------------------------------------------------------------------
# useful function definitions
#-------------------------------------------------------------------------------

# cd into new dir
mkcd () {
  if (( $# != 1 )); then
    >&2 echo "Usage: mkcd DIR"
    >&2 echo "  example: mkcd testing"
    return 1
  fi

 mkdir -p -- "$1" && cd -P -- "$1"
}

# repeat a command N times
function repeat() {
  if (( $# < 2 )); then
    >&2 echo "Usage: repeat N CMD"
    >&2 echo "  example: repeat 10 ./stress_test -n 20"
    return 1
  fi

  number = $1
  shift
  for n in $(seq $number); do
    $@
  done
}

# fuzzy open file
# tweaked from https://github.com/junegunn/fzf/wiki/examples#opening-files
fo() {
  if (( $# != 1 )); then
    >&2 echo "Usage: fo FZF"
    >&2 echo "  example: fo 'taxes pdf'"
    return 1
  fi

  # fzf over non-hidden files in home dir
  IFS=$'\n' out=("$(find ~/* -not -path '*/.*' | fzf --query="$1" --exit-0 --expect=ctrl-e,ctrl-o)")
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)

  if [ -n "$file" ]; then
    # ctrl-e to open in $EDITOR, ctrl-o or enter to xdg-open
    [ "$key" = ctrl-e ] && ${EDITOR:-vim} "$file" || xdg-open "$file"
  fi
}

# make a backup copy of a file
bak() {
  if (( $# != 1 )); then
    >&2 echo "Usage: bak FILE"
    >&2 echo "  example: bak file.txt"
    return 1
  fi

  # if there's an existing backup, remove it
  rm -rf "$1.bak"
  cp -r "$1" "$1.bak"
}

# convert everything in the current directory from one ext to another
convertall() {
  if (( $# != 2 )); then
    >&2 echo "Usage: convertall FROM_EXT TO_EXT"
    >&2 echo "  example: convertall webp jpg"
    return 1
  fi

  from=$1
  to=$2

  for name in *.$from; do
    # remove old ext and pin on the new one
    newname="${name%.$from}.$to"
    magick "$name" "$newname" && rm "$file"
  done
}
