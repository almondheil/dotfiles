#-------------------------------------------------------------------------------
# all my favorite ls aliases
#-------------------------------------------------------------------------------

alias ls="ls --color=auto" # Pretty colors!
alias la="ls -a"           # All files
alias ll="ls -lh"          # Long listing
alias lr="ls -lhr"         # Reverse alphabetical
alias lt="ls -lht"         # Most recent first

#-------------------------------------------------------------------------------
# not really a real category they're just nice
#-------------------------------------------------------------------------------

alias t="todo.sh"
alias cm="chezmoi"
alias pwf="realpath"
alias note="gonote"
alias prsync="rsync -rvh --info=progress2"
alias trash-ls="trash-list"

#-------------------------------------------------------------------------------
# useful function definitions
#-------------------------------------------------------------------------------

# cd into new dir
mkcd () {
  if (( $# != 1 )); then
    >&2 echo "Usage: mkcd DIR"
    >&2 echo "  example: mkcd testing"
    return 1
  fi

 mkdir -p -- "$1" && cd -P -- "$1"
}

# swap two files, renaming one to the other
swap() {
  if (( $# != 2 )); then
    >&2 echo "Usage: swap FILE1 FILE2"
    >&2 echo "  example: swap a.txt b.txt'"
    return 1
  fi

  tmp=`mktemp`
  mv $1 $tmp
  mv $2 $1
  mv $tmp $2
}

# repeat a command N times
function repeat() {
  if (( $# < 2 )); then
    >&2 echo "Usage: repeat N CMD"
    >&2 echo "  example: repeat 10 ./stress_test -n 20"
    return 1
  fi

  number = $1
  shift
  for n in $(seq $number); do
    $@
  done
}

# fuzzy open file
# tweaked from https://github.com/junegunn/fzf/wiki/examples#opening-files
fo() {
  if (( $# != 1 )); then
    >&2 echo "Usage: fo FZF"
    >&2 echo "  example: fo 'taxes pdf'"
    return 1
  fi

  # fzf over non-hidden files in home dir
  IFS=$'\n' out=("$(find ~/* -not -path '*/.*' | fzf --query="$1" --exit-0 --expect=ctrl-e,ctrl-o)")
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)

  if [ -n "$file" ]; then
    # ctrl-e to open in $EDITOR, ctrl-o or enter to xdg-open
    [ "$key" = ctrl-e ] && ${EDITOR:-vim} "$file" || xdg-open "$file"
  fi
}

# make a backup copy of a file
bak() {
  if (( $# != 1 )); then
    >&2 echo "Usage: bak FILE"
    >&2 echo "  example: bak file.txt"
    return 1
  fi

  # if there's an existing backup, remove it
  rm -rf "$1.bak"
  cp -r "$1" "$1.bak"
}

convertall() {
  if (( $# != 2 )); then
    >&2 echo "Usage: convertall FROM_EXT TO_EXT"
    >&2 echo "  example: convertall webp jpg"
    return 1
  fi

  from=$1
  to=$2

  for name in *.$from; do
    # remove old ext and pin on the new one
    newname="${name%.$from}.$to"
    magick "$name" "$newname" && rm "$file"
  done
}
